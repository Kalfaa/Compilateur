
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightUMINUSAND BREAK COMA DEF DIVIDE ELSE EOF EQUALITY EQUALS FOR IF LACCO LESSER LPAREN MINUS NAME NON_EQUALITY NUMBER OR PLUS PRINT RACCO RETURN RPAREN SEMICOLON STRING TIMES UPPER WHILEmaster : blocbloc :  statement bloc\n            | statementstatement : IF expression LACCO bloc RACCO ELSE LACCO bloc RACCO\n    | IF expression  LACCO bloc RACCO   statement : FOR statement statement statement LACCO bloc RACCO\n                |  FOR statement statement LACCO bloc RACCOstatement : WHILE expression  LACCO bloc RACCO statement : NAME EQUALS expression SEMICOLONstatement : expression SEMICOLONexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression EQUALITY expression\n                  | expression NON_EQUALITY expression\n                  | expression OR expression\n                  | expression AND expression\n                  | expression UPPER expression\n                  | expression LESSER expressionstatement : DEF NAME LPAREN arglist RPAREN LACCO bloc RACCO\n                  | DEF NAME LPAREN RPAREN LACCO bloc RACCOexpression : NAME LPAREN RPAREN\n                 | NAME LPAREN expressionlist RPARENexpression : MINUS expression %prec UMINUSexpression : LPAREN expression RPARENexpression : NUMBERexpression : STRINGexpression : NAMEstatement : RETURN SEMICOLON\n                    | RETURN expression SEMICOLONarglist : arglist COMA NAME\n                | NAMEexpressionlist : expressionlist COMA expression\n                        | expressionexpression : PRINT LPAREN expression RPAREN'
    
_lr_action_items = {'RACCO':([3,16,25,39,60,61,65,66,72,76,78,80,84,85,86,87,89,90,91,92,],[-3,-2,-10,-30,-31,72,76,-9,-8,-5,84,86,-7,89,-22,90,-6,-21,92,-4,]),'PLUS':([1,7,10,15,17,18,20,32,35,38,42,43,44,45,46,47,48,49,50,51,52,54,55,57,59,67,71,77,],[-27,21,-29,-28,21,-29,21,21,-25,21,-26,-11,-14,21,21,21,21,-12,-13,21,21,21,21,-23,21,-24,-36,21,]),'COMA':([1,15,18,35,42,43,44,45,46,47,48,49,50,51,52,55,56,57,63,64,67,71,77,82,],[-27,-28,-29,-25,-26,-11,-14,-18,-16,-15,-17,-12,-13,-20,-19,-35,68,-23,-33,75,-24,-36,-34,-32,]),'AND':([1,7,10,15,17,18,20,32,35,38,42,43,44,45,46,47,48,49,50,51,52,54,55,57,59,67,71,77,],[-27,23,-29,-28,23,-29,23,23,-25,23,-26,-11,-14,23,23,23,23,-12,-13,23,23,23,23,-23,23,-24,-36,23,]),'NON_EQUALITY':([1,7,10,15,17,18,20,32,35,38,42,43,44,45,46,47,48,49,50,51,52,54,55,57,59,67,71,77,],[-27,24,-29,-28,24,-29,24,24,-25,24,-26,-11,-14,24,24,24,24,-12,-13,24,24,24,24,-23,24,-24,-36,24,]),'EQUALITY':([1,7,10,15,17,18,20,32,35,38,42,43,44,45,46,47,48,49,50,51,52,54,55,57,59,67,71,77,],[-27,26,-29,-28,26,-29,26,26,-25,26,-26,-11,-14,26,26,26,26,-12,-13,26,26,26,26,-23,26,-24,-36,26,]),'NAME':([0,3,4,5,6,9,11,12,14,21,22,23,24,25,26,27,28,29,30,31,33,34,36,37,39,40,41,53,58,60,66,68,69,72,73,75,76,79,81,84,86,88,89,90,92,],[10,10,18,19,18,18,18,10,18,18,18,18,18,-10,18,18,18,18,18,18,18,18,10,18,-30,10,63,10,10,-31,-9,18,10,-8,10,82,-5,10,10,-7,-22,10,-6,-21,-4,]),'LACCO':([1,15,17,18,25,32,35,39,42,43,44,45,46,47,48,49,50,51,52,57,58,60,62,66,67,70,71,72,74,76,83,84,86,89,90,92,],[-27,-28,40,-29,-10,53,-25,-30,-26,-11,-14,-18,-16,-15,-17,-12,-13,-20,-19,-23,69,-31,73,-9,-24,79,-36,-8,81,-5,88,-7,-22,-6,-21,-4,]),'RPAREN':([1,15,18,20,34,35,41,42,43,44,45,46,47,48,49,50,51,52,55,56,57,59,63,64,67,71,77,82,],[-27,-28,-29,42,57,-25,62,-26,-11,-14,-18,-16,-15,-17,-12,-13,-20,-19,-35,67,-23,71,-33,74,-24,-36,-34,-32,]),'WHILE':([0,3,12,25,36,39,40,53,58,60,66,69,72,73,76,79,81,84,86,88,89,90,92,],[4,4,4,-10,4,-30,4,4,4,-31,-9,4,-8,4,-5,4,4,-7,-22,4,-6,-21,-4,]),'DEF':([0,3,12,25,36,39,40,53,58,60,66,69,72,73,76,79,81,84,86,88,89,90,92,],[5,5,5,-10,5,-30,5,5,5,-31,-9,5,-8,5,-5,5,5,-7,-22,5,-6,-21,-4,]),'$end':([2,3,8,16,25,39,60,66,72,76,84,86,89,90,92,],[0,-3,-1,-2,-10,-30,-31,-9,-8,-5,-7,-22,-6,-21,-4,]),'LESSER':([1,7,10,15,17,18,20,32,35,38,42,43,44,45,46,47,48,49,50,51,52,54,55,57,59,67,71,77,],[-27,30,-29,-28,30,-29,30,30,-25,30,-26,-11,-14,30,30,30,30,-12,-13,30,30,30,30,-23,30,-24,-36,30,]),'LPAREN':([0,3,4,6,9,10,11,12,13,14,18,19,21,22,23,24,25,26,27,28,29,30,31,33,34,36,37,39,40,53,58,60,66,68,69,72,73,76,79,81,84,86,88,89,90,92,],[6,6,6,6,6,34,6,6,37,6,34,41,6,6,6,6,-10,6,6,6,6,6,6,6,6,6,6,-30,6,6,6,-31,-9,6,6,-8,6,-5,6,6,-7,-22,6,-6,-21,-4,]),'UPPER':([1,7,10,15,17,18,20,32,35,38,42,43,44,45,46,47,48,49,50,51,52,54,55,57,59,67,71,77,],[-27,31,-29,-28,31,-29,31,31,-25,31,-26,-11,-14,31,31,31,31,-12,-13,31,31,31,31,-23,31,-24,-36,31,]),'EQUALS':([10,],[33,]),'OR':([1,7,10,15,17,18,20,32,35,38,42,43,44,45,46,47,48,49,50,51,52,54,55,57,59,67,71,77,],[-27,27,-29,-28,27,-29,27,27,-25,27,-26,-11,-14,27,27,27,27,-12,-13,27,27,27,27,-23,27,-24,-36,27,]),'DIVIDE':([1,7,10,15,17,18,20,32,35,38,42,43,44,45,46,47,48,49,50,51,52,54,55,57,59,67,71,77,],[-27,22,-29,-28,22,-29,22,22,-25,22,-26,22,-14,22,22,22,22,22,-13,22,22,22,22,-23,22,-24,-36,22,]),'NUMBER':([0,3,4,6,9,11,12,14,21,22,23,24,25,26,27,28,29,30,31,33,34,36,37,39,40,53,58,60,66,68,69,72,73,76,79,81,84,86,88,89,90,92,],[1,1,1,1,1,1,1,1,1,1,1,1,-10,1,1,1,1,1,1,1,1,1,1,-30,1,1,1,-31,-9,1,1,-8,1,-5,1,1,-7,-22,1,-6,-21,-4,]),'ELSE':([76,],[83,]),'IF':([0,3,12,25,36,39,40,53,58,60,66,69,72,73,76,79,81,84,86,88,89,90,92,],[9,9,9,-10,9,-30,9,9,9,-31,-9,9,-8,9,-5,9,9,-7,-22,9,-6,-21,-4,]),'SEMICOLON':([1,7,10,14,15,18,35,38,42,43,44,45,46,47,48,49,50,51,52,54,57,67,71,],[-27,25,-29,39,-28,-29,-25,60,-26,-11,-14,-18,-16,-15,-17,-12,-13,-20,-19,66,-23,-24,-36,]),'MINUS':([0,1,3,4,6,7,9,10,11,12,14,15,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,66,67,68,69,71,72,73,76,77,79,81,84,86,88,89,90,92,],[11,-27,11,11,11,28,11,-29,11,11,11,-28,28,-29,28,11,11,11,11,-10,11,11,11,11,11,11,28,11,11,-25,11,11,28,-30,11,-26,-11,-14,28,28,28,28,-12,-13,28,28,11,28,28,-23,11,28,-31,-9,-24,11,11,-36,-8,11,-5,28,11,11,-7,-22,11,-6,-21,-4,]),'FOR':([0,3,12,25,36,39,40,53,58,60,66,69,72,73,76,79,81,84,86,88,89,90,92,],[12,12,12,-10,12,-30,12,12,12,-31,-9,12,-8,12,-5,12,12,-7,-22,12,-6,-21,-4,]),'TIMES':([1,7,10,15,17,18,20,32,35,38,42,43,44,45,46,47,48,49,50,51,52,54,55,57,59,67,71,77,],[-27,29,-29,-28,29,-29,29,29,-25,29,-26,29,-14,29,29,29,29,29,-13,29,29,29,29,-23,29,-24,-36,29,]),'PRINT':([0,3,4,6,9,11,12,14,21,22,23,24,25,26,27,28,29,30,31,33,34,36,37,39,40,53,58,60,66,68,69,72,73,76,79,81,84,86,88,89,90,92,],[13,13,13,13,13,13,13,13,13,13,13,13,-10,13,13,13,13,13,13,13,13,13,13,-30,13,13,13,-31,-9,13,13,-8,13,-5,13,13,-7,-22,13,-6,-21,-4,]),'RETURN':([0,3,12,25,36,39,40,53,58,60,66,69,72,73,76,79,81,84,86,88,89,90,92,],[14,14,14,-10,14,-30,14,14,14,-31,-9,14,-8,14,-5,14,14,-7,-22,14,-6,-21,-4,]),'STRING':([0,3,4,6,9,11,12,14,21,22,23,24,25,26,27,28,29,30,31,33,34,36,37,39,40,53,58,60,66,68,69,72,73,76,79,81,84,86,88,89,90,92,],[15,15,15,15,15,15,15,15,15,15,15,15,-10,15,15,15,15,15,15,15,15,15,15,-30,15,15,15,-31,-9,15,15,-8,15,-5,15,15,-7,-22,15,-6,-21,-4,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,3,12,36,40,53,58,69,73,79,81,88,],[3,3,36,58,3,3,70,3,3,3,3,3,]),'bloc':([0,3,40,53,69,73,79,81,88,],[8,16,61,65,78,80,85,87,91,]),'expressionlist':([34,],[56,]),'master':([0,],[2,]),'expression':([0,3,4,6,9,11,12,14,21,22,23,24,26,27,28,29,30,31,33,34,36,37,40,53,58,68,69,73,79,81,88,],[7,7,17,20,32,35,7,38,43,44,45,46,47,48,49,50,51,52,54,55,7,59,7,7,7,77,7,7,7,7,7,]),'arglist':([41,],[64,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> master","S'",1,None,None,None),
  ('master -> bloc','master',1,'p_master','calc.py',89),
  ('bloc -> statement bloc','bloc',2,'p_bloc','calc.py',94),
  ('bloc -> statement','bloc',1,'p_bloc','calc.py',95),
  ('statement -> IF expression LACCO bloc RACCO ELSE LACCO bloc RACCO','statement',9,'p_IF_statement','calc.py',105),
  ('statement -> IF expression LACCO bloc RACCO','statement',5,'p_IF_statement','calc.py',106),
  ('statement -> FOR statement statement statement LACCO bloc RACCO','statement',7,'p_FOR_statement','calc.py',115),
  ('statement -> FOR statement statement LACCO bloc RACCO','statement',6,'p_FOR_statement','calc.py',116),
  ('statement -> WHILE expression LACCO bloc RACCO','statement',5,'p_WHILE_statement','calc.py',122),
  ('statement -> NAME EQUALS expression SEMICOLON','statement',4,'p_statement_assign','calc.py',127),
  ('statement -> expression SEMICOLON','statement',2,'p_statement_expr','calc.py',133),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','calc.py',138),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','calc.py',139),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','calc.py',140),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','calc.py',141),
  ('expression -> expression EQUALITY expression','expression',3,'p_expression_binop','calc.py',142),
  ('expression -> expression NON_EQUALITY expression','expression',3,'p_expression_binop','calc.py',143),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','calc.py',144),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','calc.py',145),
  ('expression -> expression UPPER expression','expression',3,'p_expression_binop','calc.py',146),
  ('expression -> expression LESSER expression','expression',3,'p_expression_binop','calc.py',147),
  ('statement -> DEF NAME LPAREN arglist RPAREN LACCO bloc RACCO','statement',8,'p_def_function','calc.py',153),
  ('statement -> DEF NAME LPAREN RPAREN LACCO bloc RACCO','statement',7,'p_def_function','calc.py',154),
  ('expression -> NAME LPAREN RPAREN','expression',3,'p_exec_function','calc.py',161),
  ('expression -> NAME LPAREN expressionlist RPAREN','expression',4,'p_exec_function','calc.py',162),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','calc.py',258),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','calc.py',263),
  ('expression -> NUMBER','expression',1,'p_expression_number','calc.py',268),
  ('expression -> STRING','expression',1,'p_expression_string','calc.py',273),
  ('expression -> NAME','expression',1,'p_expression_name','calc.py',278),
  ('statement -> RETURN SEMICOLON','statement',2,'p_return_name','calc.py',282),
  ('statement -> RETURN expression SEMICOLON','statement',3,'p_return_name','calc.py',283),
  ('arglist -> arglist COMA NAME','arglist',3,'p_arg_list','calc.py',290),
  ('arglist -> NAME','arglist',1,'p_arg_list','calc.py',291),
  ('expressionlist -> expressionlist COMA expression','expressionlist',3,'p_expression_list','calc.py',298),
  ('expressionlist -> expression','expressionlist',1,'p_expression_list','calc.py',299),
  ('expression -> PRINT LPAREN expression RPAREN','expression',4,'p_print','calc.py',309),
]

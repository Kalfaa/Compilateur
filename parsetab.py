
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightUMINUSAND COMA DEF DIVIDE ELSE EQUALITY EQUALS FOR IF LACCO LESSER LPAREN MINUS NAME NON_EQUALITY NUMBER OR PLUS RACCO RPAREN SEMICOLON STRING TIMES UPPER WHILEbloc : bloc statement\n            | statementstatement : IF expression LACCO bloc RACCO ELSE LACCO bloc RACCO\n    | IF expression  LACCO bloc RACCO   statement : FOR statement statement statement LACCO bloc RACCO\n                |  FOR statement statement LACCO bloc RACCOstatement : WHILE expression  LACCO bloc RACCO statement : NAME EQUALS expression SEMICOLONstatement : expression SEMICOLONexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression EQUALITY expression\n                  | expression NON_EQUALITY expression\n                  | expression OR expression\n                  | expression AND expression\n                  | expression UPPER expression\n                  | expression LESSER expressionstatement : DEF NAME LPAREN arglist RPAREN LACCO bloc RACCO\n                  | DEF NAME LPAREN RPAREN LACCO bloc RACCOexpression : MINUS expression %prec UMINUSexpression : LPAREN expression RPARENexpression : NUMBERexpression : STRINGexpression : NAMEarglist : arglist COMA NAME\n                | NAME'
    
_lr_action_items = {'EQUALS':([10,],[30,]),'EQUALITY':([5,6,7,10,15,16,28,29,32,35,36,37,38,39,40,41,42,43,44,46,48,],[-25,-24,19,-26,19,-26,-22,19,19,-11,19,19,-10,19,-13,-12,19,19,19,19,-23,]),'FOR':([0,1,2,3,13,14,18,33,34,45,50,51,52,53,57,58,59,60,63,64,65,68,69,70,71,72,73,74,75,76,],[3,-2,3,3,-1,3,-9,3,3,3,3,3,3,-8,3,3,-7,-4,3,3,-6,3,3,-5,3,3,-21,3,-20,-3,]),'WHILE':([0,1,2,3,13,14,18,33,34,45,50,51,52,53,57,58,59,60,63,64,65,68,69,70,71,72,73,74,75,76,],[4,-2,4,4,-1,4,-9,4,4,4,4,4,4,-8,4,4,-7,-4,4,4,-6,4,4,-5,4,4,-21,4,-20,-3,]),'STRING':([0,1,2,3,4,8,9,12,13,14,17,18,19,20,21,22,23,24,25,26,27,30,33,34,45,50,51,52,53,57,58,59,60,63,64,65,68,69,70,71,72,73,74,75,76,],[5,-2,5,5,5,5,5,5,-1,5,5,-9,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-8,5,5,-7,-4,5,5,-6,5,5,-5,5,5,-21,5,-20,-3,]),'COMA':([54,56,67,],[61,-28,-27,]),'UPPER':([5,6,7,10,15,16,28,29,32,35,36,37,38,39,40,41,42,43,44,46,48,],[-25,-24,22,-26,22,-26,-22,22,22,-11,22,22,-10,22,-13,-12,22,22,22,22,-23,]),'DIVIDE':([5,6,7,10,15,16,28,29,32,35,36,37,38,39,40,41,42,43,44,46,48,],[-25,-24,23,-26,23,-26,-22,23,23,23,23,23,23,23,-13,-12,23,23,23,23,-23,]),'NAME':([0,1,2,3,4,8,9,11,12,13,14,17,18,19,20,21,22,23,24,25,26,27,30,33,34,45,47,50,51,52,53,57,58,59,60,61,63,64,65,68,69,70,71,72,73,74,75,76,],[10,-2,10,10,16,16,16,31,16,-1,10,16,-9,16,16,16,16,16,16,16,16,16,16,10,10,10,56,10,10,10,-8,10,10,-7,-4,67,10,10,-6,10,10,-5,10,10,-21,10,-20,-3,]),'RACCO':([1,13,18,51,52,53,58,59,60,64,65,69,70,72,73,74,75,76,],[-2,-1,-9,59,60,-8,65,-7,-4,70,-6,73,-5,75,-21,76,-20,-3,]),'LESSER':([5,6,7,10,15,16,28,29,32,35,36,37,38,39,40,41,42,43,44,46,48,],[-25,-24,26,-26,26,-26,-22,26,26,-11,26,26,-10,26,-13,-12,26,26,26,26,-23,]),'NUMBER':([0,1,2,3,4,8,9,12,13,14,17,18,19,20,21,22,23,24,25,26,27,30,33,34,45,50,51,52,53,57,58,59,60,63,64,65,68,69,70,71,72,73,74,75,76,],[6,-2,6,6,6,6,6,6,-1,6,6,-9,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-8,6,6,-7,-4,6,6,-6,6,6,-5,6,6,-21,6,-20,-3,]),'MINUS':([0,1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,50,51,52,53,57,58,59,60,63,64,65,68,69,70,71,72,73,74,75,76,],[8,-2,8,8,8,-25,-24,17,8,8,-26,8,-1,8,17,-26,8,-9,8,8,8,8,8,8,8,8,8,-22,17,8,17,8,8,-11,17,17,-10,17,-13,-12,17,17,17,8,17,-23,8,8,8,-8,8,8,-7,-4,8,8,-6,8,8,-5,8,8,-21,8,-20,-3,]),'IF':([0,1,2,3,13,14,18,33,34,45,50,51,52,53,57,58,59,60,63,64,65,68,69,70,71,72,73,74,75,76,],[9,-2,9,9,-1,9,-9,9,9,9,9,9,9,-8,9,9,-7,-4,9,9,-6,9,9,-5,9,9,-21,9,-20,-3,]),'SEMICOLON':([5,6,7,10,16,28,35,36,37,38,39,40,41,42,43,44,46,48,],[-25,-24,18,-26,-26,-22,-11,-14,-16,-10,-18,-13,-12,-15,-19,-17,53,-23,]),'OR':([5,6,7,10,15,16,28,29,32,35,36,37,38,39,40,41,42,43,44,46,48,],[-25,-24,20,-26,20,-26,-22,20,20,-11,20,20,-10,20,-13,-12,20,20,20,20,-23,]),'PLUS':([5,6,7,10,15,16,28,29,32,35,36,37,38,39,40,41,42,43,44,46,48,],[-25,-24,21,-26,21,-26,-22,21,21,-11,21,21,-10,21,-13,-12,21,21,21,21,-23,]),'$end':([1,2,13,18,53,59,60,65,70,73,75,76,],[-2,0,-1,-9,-8,-7,-4,-6,-5,-21,-20,-3,]),'DEF':([0,1,2,3,13,14,18,33,34,45,50,51,52,53,57,58,59,60,63,64,65,68,69,70,71,72,73,74,75,76,],[11,-2,11,11,-1,11,-9,11,11,11,11,11,11,-8,11,11,-7,-4,11,11,-6,11,11,-5,11,11,-21,11,-20,-3,]),'RPAREN':([5,6,16,28,32,35,36,37,38,39,40,41,42,43,44,47,48,54,56,67,],[-25,-24,-26,-22,48,-11,-14,-16,-10,-18,-13,-12,-15,-19,-17,55,-23,62,-28,-27,]),'TIMES':([5,6,7,10,15,16,28,29,32,35,36,37,38,39,40,41,42,43,44,46,48,],[-25,-24,24,-26,24,-26,-22,24,24,24,24,24,24,24,-13,-12,24,24,24,24,-23,]),'NON_EQUALITY':([5,6,7,10,15,16,28,29,32,35,36,37,38,39,40,41,42,43,44,46,48,],[-25,-24,25,-26,25,-26,-22,25,25,-11,25,25,-10,25,-13,-12,25,25,25,25,-23,]),'LACCO':([5,6,15,16,18,28,29,33,35,36,37,38,39,40,41,42,43,44,48,49,53,55,59,60,62,65,66,70,73,75,76,],[-25,-24,34,-26,-9,-22,45,50,-11,-14,-16,-10,-18,-13,-12,-15,-19,-17,-23,57,-8,63,-7,-4,68,-6,71,-5,-21,-20,-3,]),'ELSE':([60,],[66,]),'LPAREN':([0,1,2,3,4,8,9,12,13,14,17,18,19,20,21,22,23,24,25,26,27,30,31,33,34,45,50,51,52,53,57,58,59,60,63,64,65,68,69,70,71,72,73,74,75,76,],[12,-2,12,12,12,12,12,12,-1,12,12,-9,12,12,12,12,12,12,12,12,12,12,47,12,12,12,12,12,12,-8,12,12,-7,-4,12,12,-6,12,12,-5,12,12,-21,12,-20,-3,]),'AND':([5,6,7,10,15,16,28,29,32,35,36,37,38,39,40,41,42,43,44,46,48,],[-25,-24,27,-26,27,-26,-22,27,27,-11,27,27,-10,27,-13,-12,27,27,27,27,-23,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,2,3,14,33,34,45,50,51,52,57,58,63,64,68,69,71,72,74,],[1,13,14,33,49,1,1,1,13,13,1,13,1,13,1,13,1,13,13,]),'expression':([0,2,3,4,8,9,12,14,17,19,20,21,22,23,24,25,26,27,30,33,34,45,50,51,52,57,58,63,64,68,69,71,72,74,],[7,7,7,15,28,29,32,7,35,36,37,38,39,40,41,42,43,44,46,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'arglist':([47,],[54,]),'bloc':([0,34,45,50,57,63,68,71,],[2,51,52,58,64,69,72,74,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> bloc","S'",1,None,None,None),
  ('bloc -> bloc statement','bloc',2,'p_bloc','calc.py',84),
  ('bloc -> statement','bloc',1,'p_bloc','calc.py',85),
  ('statement -> IF expression LACCO bloc RACCO ELSE LACCO bloc RACCO','statement',9,'p_IF_statement','calc.py',94),
  ('statement -> IF expression LACCO bloc RACCO','statement',5,'p_IF_statement','calc.py',95),
  ('statement -> FOR statement statement statement LACCO bloc RACCO','statement',7,'p_FOR_statement','calc.py',105),
  ('statement -> FOR statement statement LACCO bloc RACCO','statement',6,'p_FOR_statement','calc.py',106),
  ('statement -> WHILE expression LACCO bloc RACCO','statement',5,'p_WHILE_statement','calc.py',112),
  ('statement -> NAME EQUALS expression SEMICOLON','statement',4,'p_statement_assign','calc.py',117),
  ('statement -> expression SEMICOLON','statement',2,'p_statement_expr','calc.py',123),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','calc.py',128),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','calc.py',129),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','calc.py',130),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','calc.py',131),
  ('expression -> expression EQUALITY expression','expression',3,'p_expression_binop','calc.py',132),
  ('expression -> expression NON_EQUALITY expression','expression',3,'p_expression_binop','calc.py',133),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','calc.py',134),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','calc.py',135),
  ('expression -> expression UPPER expression','expression',3,'p_expression_binop','calc.py',136),
  ('expression -> expression LESSER expression','expression',3,'p_expression_binop','calc.py',137),
  ('statement -> DEF NAME LPAREN arglist RPAREN LACCO bloc RACCO','statement',8,'p_function','calc.py',143),
  ('statement -> DEF NAME LPAREN RPAREN LACCO bloc RACCO','statement',7,'p_function','calc.py',144),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','calc.py',203),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','calc.py',208),
  ('expression -> NUMBER','expression',1,'p_expression_number','calc.py',213),
  ('expression -> STRING','expression',1,'p_expression_string','calc.py',218),
  ('expression -> NAME','expression',1,'p_expression_name','calc.py',223),
  ('arglist -> arglist COMA NAME','arglist',3,'p_arg_list','calc.py',227),
  ('arglist -> NAME','arglist',1,'p_arg_list','calc.py',228),
]
